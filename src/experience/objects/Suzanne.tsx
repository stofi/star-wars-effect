/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import React, { forwardRef, useRef } from 'react'

import { Center, useGLTF } from '@react-three/drei'
import { GroupProps } from '@react-three/fiber'

type GLTFResult = GLTF & {
  nodes: {
    Suzanne: THREE.Mesh
  }
  materials: {
    ['default']: THREE.MeshStandardMaterial
  }
}

const Suzanne = forwardRef<THREE.Group, GroupProps>(function Suzanne(
  props,
  ref,
) {
  const { nodes } = useGLTF(
    'https://market-assets.fra1.cdn.digitaloceanspaces.com/market-assets/models/suzanne-high-poly/model.gltf',
  ) as GLTFResult

  return (
    <group ref={ref} {...props} dispose={null}>
      <Center>
        <mesh geometry={nodes.Suzanne.geometry}>{props.children}</mesh>
      </Center>
    </group>
  )
})

useGLTF.preload(
  'https://market-assets.fra1.cdn.digitaloceanspaces.com/market-assets/models/suzanne-high-poly/model.gltf',
)

export default Suzanne
